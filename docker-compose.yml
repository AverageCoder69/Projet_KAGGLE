services:
  web:
    build: .
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=3306
    networks:
      - kaggle-network

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./database/setup.sql:/docker-entrypoint-initdb.d/setup.sql
      - ./database/uaScoresDataFrame.csv:/docker-entrypoint-initdb.d/uaScoresDataFrame.csv
      - ./database/uaScoresDataFrame1k.csv:/docker-entrypoint-initdb.d/uaScoresDataFrame1k.csv
      - ./database/uaScoresDataFrame10k.csv:/docker-entrypoint-initdb.d/uaScoresDataFrame10k.csv
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - kaggle-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - kaggle-network

volumes:
  db_data:

networks:
  kaggle-network:
    driver: bridge